/***/
package org.eclipse.ui.internal.handlers;

import java.util.HashMap;
import java.util.Map;
import org.eclipse.ui.internal.registry.IWorkbenchRegistryConstants;

/**
* <p>
* A service which holds mappings between retarget action identifiers and
* command identifiers (aka: action definition ids). This implementation does
* not clean up in the case of dynamic plug-ins.
* </p>
* <p>
* This class is not intended for use outside of the
* <code>org.eclipse.ui.workbench</code> plug-in.
* </p>
*
* @since 3.2
*/
public final class ActionCommandMappingService implements IActionCommandMappingService {

    /**
* The map of action identifiers ({@link String}) to command identifiers ({@link String}).
* This value is never <code>null</code>.
*/
    private final Map mapping = new HashMap();

    @Override
    public final String getCommandId(final String actionId) {
        if (actionId == null) {
            throw new NullPointerException(//$NON-NLS-1$
            "Cannot get the command identifier for a null action id");
        }
        return (String) mapping.get(actionId);
    }

    @Override
    public final void map(final String actionId, final String commandId) {
        if (actionId == null) {
            //$NON-NLS-1$
            throw new NullPointerException("The action id cannot be null");
        }
        if (commandId == null) {
            //$NON-NLS-1$
            throw new NullPointerException("The command id cannot be null");
        }
        mapping.put(actionId, commandId);
    }

    @Override
    public final String getGeneratedCommandId(String targetId, String actionId) {
        return IWorkbenchRegistryConstants.AUTOGENERATED_PREFIX + targetId + '/' + actionId;
    }
}
