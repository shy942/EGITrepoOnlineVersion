/Users/user/eclipse.platform.ui/bundles/org.eclipse.jface/src/org/eclipse/jface/viewers/deferred/BackgroundContentProvider.java
org eclipse jface viewers deferred java util comparator org eclipse core runtime progress monitor org eclipse core runtime null progress monitor org eclipse jface resource face resources org eclipse core runtime assert org eclipse jface viewers accept all filter org eclipse jface viewers filter org eclipse jface viewers deferred concurrent table updator range background content provider sorting message string string face resources string sorting table limit unlimited limit model providing input content provider concurrent model model current sort order comparator sort order true iff content provider filter filter accept all filter instance queued change queue change queue change queue listener callbacks model concurrent model listener listener concurrent model listener override add object background content provider add override remove object removed background content provider remove removed override set contents object contents background content provider set contents contents override update object changed background content provider update changed object posts updates thread must synchronize sort mutex accessing concurrent table updator updator progress monitor sorting progress monitor null progress monitor thread sort thread null fast progress reporter sort mon fast progress reporter range range range creates background content provider param table table receive updates param model data source param sort order initial sort order background content provider abstract virtual table table concurrent model model comparator sort order updator concurrent table updator table model model sort order sort order model add listener listener cleans content provider detaches listeners frees memory must method called object dispose cancel sort job updator dispose model remove listener listener force refresh asks model send complete contents refresh updator disposed model request update listener called sort job sorts elements defined sort start sort length schedules update finished param mon monitor progress reported sort progress monitor mon workaround weirdness jobs framework cancel monitor job ended reschedule job start job monitor cancelled workaround removing references progress monitor job terminates require additional synchronize blocks slow complexity instead cancel monitor start job mon set canceled false mon task create lazy sorted collection comparator order sort order filter filter lazy sorted collection collection lazy sorted collection order fill existing objects object objects updator known objects objects length object object objects object null collection add object dirty false prev size objects length updator set total items prev size start processing true comparator order sort order dirty true order sort order copy elements collection lazy sorted collection collection lazy sorted collection order object items collection items false items length order sort order object item items collection add item sort order changed loop order sort order collection collection filter changed filter dirty true filter object items collection items false remove items don pass filter items length filter object test items select test collection remove test pending process change queue empty dirty true change queue change change queue dequeue type change queue filtered add collection elements change queue object remove elements flush remove collection collection remove all remove change queue object items elements items length object item items collection item write collection update method collection remove item collection add item updator clear item change queue object items elements collection clear filtered add collection items total elements collection size limit total elements limit total elements limit total elements prev size prev size total elements send total items updator user scroll table sort range change job cancelled updator set total items total elements dirty true terminate loop dirty concurrent table updator range update range updator visible range sort mon fast progress reporter range update range sort start update range start sort length update range length limit collection retain first limit sort mon sort length math min sort length total elements sort start sort length math max sort length object objects interest object sort length collection range objects interest sort start true sort mon send elements table sort length object object objects interest updator replace object sort start objects interest object collection size collection first objects interest true sort mon send elements table total elements object object objects interest updator replace object interrupted exception dirty false mon param collection param add filtered add lazy sorted collection collection object add filter filter filter accept all filter instance add length object object add filter select object collection add object collection add all add sets sort order content provider param sorter sort order set sort order comparator sorter assert not null sorter sort order sorter sort mon cancel refresh sets filter content provider param set filter set set filter filter set assert not null set filter set sort mon cancel refresh sets maximum table size based current sort order table truncated grows size using limit improves memory usage performance recommended large tables param limit maximum rows table unbounded set limit limit limit limit refresh returns maximum table size unbounded maximum number rows table unbounded limit limit checks visible range changed triggers update resort must called thread typically set data callback param include index included visible range check visible range include index updator check visible range include index concurrent table updator range range updator visible range concurrent table updator range range range middle processing invalid range cancel sort range start range start range length range length sort mon cancel this lock protects variables sort thread started resort scheduled object lock object true sort thread running sort thread started false true sort sort scheduled false sort thread thread sort thread string override loop true lock sort scheduled false main work sort sorting progress monitor exception lock sort scheduled loop sort thread started false loop must called model dirties object triggers sort dirty lock sort mon cancel request sorting sort scheduled true sort thread started sort thread started true sort thread sort thread sort thread set daemon true sort thread set priority thread sort thread start cancels sort progress note fast progres reporter responsive canceling sort job however problem cancel ways cancel sort job sort mon cancel sorting progress monitor set canceled true called elements model param add newly elements add object add change queue enqueue change queue add dirty called complete contents model param contents contents model set contents object contents change queue enqueue change queue contents dirty called elements removed model param remove elements removed model remove object remove change queue enqueue change queue remove dirty refresh notifies updator elements changed param flush changed elements param collection collection elements flush object flush lazy sorted collection collection flush length object item flush collection item updator clear item called elements model change param items changed items update object items change queue enqueue change queue items dirty